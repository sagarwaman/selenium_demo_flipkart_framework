<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="10" passed="8">
  <reporter-output>
  </reporter-output>
  <suite name="Flipkart online shopping application" duration-ms="185785" started-at="2020-08-17T09:58:27 IST" finished-at="2020-08-17T10:01:33 IST">
    <groups>
    </groups>
    <test name="Online shopping test automation" duration-ms="185785" started-at="2020-08-17T09:58:27 IST" finished-at="2020-08-17T10:01:33 IST">
      <class name="com.testcases.loginpage">
        <test-method status="PASS" signature="loginreporttest()[pri:0, instance:com.testcases.loginpage@394e1a0f]" name="loginreporttest" is-config="true" duration-ms="1" started-at="2020-08-17T09:58:27 IST" finished-at="2020-08-17T09:58:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginreporttest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.testcases.loginpage@394e1a0f]" name="setup" is-config="true" duration-ms="15707" started-at="2020-08-17T09:58:27 IST" finished-at="2020-08-17T09:58:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="getmytitle()[pri:1, instance:com.testcases.loginpage@394e1a0f]" name="getmytitle" duration-ms="88" started-at="2020-08-17T09:58:43 IST" finished-at="2020-08-17T09:58:43 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getmytitle -->
        <test-method status="PASS" signature="getreport(org.testng.ITestResult)[pri:0, instance:com.testcases.loginpage@394e1a0f]" name="getreport" is-config="true" duration-ms="1003" started-at="2020-08-17T09:58:43 IST" finished-at="2020-08-17T09:58:44 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getmytitle status=SUCCESS method=loginpage.getmytitle()[pri:1, instance:com.testcases.loginpage@394e1a0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getreport -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.testcases.loginpage@394e1a0f]" name="setup" is-config="true" duration-ms="9447" started-at="2020-08-17T09:58:44 IST" finished-at="2020-08-17T09:58:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="validatemylogo()[pri:2, instance:com.testcases.loginpage@394e1a0f]" name="validatemylogo" duration-ms="226" started-at="2020-08-17T09:58:54 IST" finished-at="2020-08-17T09:58:54 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validatemylogo -->
        <test-method status="PASS" signature="getreport(org.testng.ITestResult)[pri:0, instance:com.testcases.loginpage@394e1a0f]" name="getreport" is-config="true" duration-ms="929" started-at="2020-08-17T09:58:54 IST" finished-at="2020-08-17T09:58:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validatemylogo status=SUCCESS method=loginpage.validatemylogo()[pri:2, instance:com.testcases.loginpage@394e1a0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getreport -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.testcases.loginpage@394e1a0f]" name="setup" is-config="true" duration-ms="9679" started-at="2020-08-17T09:58:55 IST" finished-at="2020-08-17T09:59:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="loginapp()[pri:3, instance:com.testcases.loginpage@394e1a0f]" name="loginapp" duration-ms="806" started-at="2020-08-17T09:59:04 IST" finished-at="2020-08-17T09:59:05 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginapp -->
        <test-method status="PASS" signature="getreport(org.testng.ITestResult)[pri:0, instance:com.testcases.loginpage@394e1a0f]" name="getreport" is-config="true" duration-ms="1422" started-at="2020-08-17T09:59:05 IST" finished-at="2020-08-17T09:59:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginapp status=SUCCESS method=loginpage.loginapp()[pri:3, instance:com.testcases.loginpage@394e1a0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getreport -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.testcases.loginpage@394e1a0f]" name="setup" is-config="true" duration-ms="9244" started-at="2020-08-17T09:59:07 IST" finished-at="2020-08-17T09:59:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="mytest()[pri:4, instance:com.testcases.loginpage@394e1a0f]" name="mytest" duration-ms="6" started-at="2020-08-17T09:59:16 IST" finished-at="2020-08-17T09:59:16 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.testcases.loginpage.mytest(loginpage.java:64)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mytest -->
        <test-method status="PASS" signature="getreport(org.testng.ITestResult)[pri:0, instance:com.testcases.loginpage@394e1a0f]" name="getreport" is-config="true" duration-ms="971" started-at="2020-08-17T09:59:16 IST" finished-at="2020-08-17T09:59:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mytest status=FAILURE method=loginpage.mytest()[pri:4, instance:com.testcases.loginpage@394e1a0f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getreport -->
        <test-method status="PASS" signature="endtest()[pri:0, instance:com.testcases.loginpage@394e1a0f]" name="endtest" is-config="true" duration-ms="0" started-at="2020-08-17T10:01:35 IST" finished-at="2020-08-17T10:01:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endtest -->
      </class> <!-- com.testcases.loginpage -->
      <class name="com.testcases.Homepage">
        <test-method status="PASS" signature="Homepagereporttest()[pri:0, instance:com.testcases.Homepage@27a5f880]" name="Homepagereporttest" is-config="true" duration-ms="42" started-at="2020-08-17T09:58:27 IST" finished-at="2020-08-17T09:58:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Homepagereporttest -->
        <test-method status="PASS" signature="Homepage_setup()[pri:0, instance:com.testcases.Homepage@27a5f880]" name="Homepage_setup" is-config="true" duration-ms="9884" started-at="2020-08-17T09:59:17 IST" finished-at="2020-08-17T09:59:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Homepage_setup -->
        <test-method status="PASS" signature="validate_homepage_logo()[pri:1, instance:com.testcases.Homepage@27a5f880]" name="validate_homepage_logo" duration-ms="119" started-at="2020-08-17T09:59:27 IST" finished-at="2020-08-17T09:59:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_homepage_logo -->
        <test-method status="PASS" signature="getreport(org.testng.ITestResult)[pri:0, instance:com.testcases.Homepage@27a5f880]" name="getreport" is-config="true" duration-ms="1026" started-at="2020-08-17T09:59:27 IST" finished-at="2020-08-17T09:59:28 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validate_homepage_logo status=SUCCESS method=Homepage.validate_homepage_logo()[pri:1, instance:com.testcases.Homepage@27a5f880] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getreport -->
        <test-method status="PASS" signature="Homepage_setup()[pri:0, instance:com.testcases.Homepage@27a5f880]" name="Homepage_setup" is-config="true" duration-ms="10560" started-at="2020-08-17T09:59:28 IST" finished-at="2020-08-17T09:59:38 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Homepage_setup -->
        <test-method status="FAIL" signature="navigate_home_page_test()[pri:2, instance:com.testcases.Homepage@27a5f880]" name="navigate_home_page_test" duration-ms="15509" started-at="2020-08-17T09:59:38 IST" finished-at="2020-08-17T09:59:54 IST">
          <exception class="org.openqa.selenium.ElementNotInteractableException">
            <message>
              <![CDATA[element not interactable
  (Session info: chrome=84.0.4147.125)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-QS5U4P3G', ip: '100.64.105.236', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.125, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\SAGAR\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56314}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 163e9e2bb323579e2de92cc99cc44601]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementNotInteractableException: element not interactable
  (Session info: chrome=84.0.4147.125)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'LAPTOP-QS5U4P3G', ip: '100.64.105.236', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_261'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 84.0.4147.125, chrome: {chromedriverVersion: 83.0.4103.39 (ccbf011cb2d2b..., userDataDir: C:\Users\SAGAR\AppData\Loca...}, goog:chromeOptions: {debuggerAddress: localhost:56314}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:virtualAuthenticators: true}
Session ID: 163e9e2bb323579e2de92cc99cc44601
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
at java.lang.reflect.Constructor.newInstance(Unknown Source)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at com.sun.proxy.$Proxy11.click(Unknown Source)
at com.pages.myhomepage.moveelement(myhomepage.java:39)
at com.testcases.Homepage.navigate_home_page_test(Homepage.java:54)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementNotInteractableException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- navigate_home_page_test -->
        <test-method status="PASS" signature="getreport(org.testng.ITestResult)[pri:0, instance:com.testcases.Homepage@27a5f880]" name="getreport" is-config="true" duration-ms="927" started-at="2020-08-17T09:59:54 IST" finished-at="2020-08-17T09:59:55 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=navigate_home_page_test status=FAILURE method=Homepage.navigate_home_page_test()[pri:2, instance:com.testcases.Homepage@27a5f880] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getreport -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.testcases.Homepage@27a5f880]" name="teardown" is-config="true" duration-ms="0" started-at="2020-08-17T10:01:33 IST" finished-at="2020-08-17T10:01:33 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.testcases.Homepage -->
      <class name="com.testcases.Mobile">
        <test-method status="PASS" signature="reporttest()[pri:0, instance:com.testcases.Mobile@1d29cf23]" name="reporttest" is-config="true" duration-ms="529" started-at="2020-08-17T09:58:27 IST" finished-at="2020-08-17T09:58:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reporttest -->
        <test-method status="PASS" signature="setupmobilepage()[pri:0, instance:com.testcases.Mobile@1d29cf23]" name="setupmobilepage" is-config="true" duration-ms="21012" started-at="2020-08-17T09:59:55 IST" finished-at="2020-08-17T10:00:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupmobilepage -->
        <test-method status="PASS" signature="validate_mobilepage_title()[pri:1, instance:com.testcases.Mobile@1d29cf23]" name="validate_mobilepage_title" duration-ms="13" started-at="2020-08-17T10:00:16 IST" finished-at="2020-08-17T10:00:16 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_mobilepage_title -->
        <test-method status="PASS" signature="getreport(org.testng.ITestResult)[pri:0, instance:com.testcases.Mobile@1d29cf23]" name="getreport" is-config="true" duration-ms="997" started-at="2020-08-17T10:00:16 IST" finished-at="2020-08-17T10:00:17 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validate_mobilepage_title status=SUCCESS method=Mobile.validate_mobilepage_title()[pri:1, instance:com.testcases.Mobile@1d29cf23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getreport -->
        <test-method status="PASS" signature="setupmobilepage()[pri:0, instance:com.testcases.Mobile@1d29cf23]" name="setupmobilepage" is-config="true" duration-ms="21719" started-at="2020-08-17T10:00:17 IST" finished-at="2020-08-17T10:00:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupmobilepage -->
        <test-method status="PASS" signature="get_text_test()[pri:2, instance:com.testcases.Mobile@1d29cf23]" name="get_text_test" duration-ms="105" started-at="2020-08-17T10:00:39 IST" finished-at="2020-08-17T10:00:39 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- get_text_test -->
        <test-method status="PASS" signature="getreport(org.testng.ITestResult)[pri:0, instance:com.testcases.Mobile@1d29cf23]" name="getreport" is-config="true" duration-ms="1052" started-at="2020-08-17T10:00:39 IST" finished-at="2020-08-17T10:00:40 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=get_text_test status=SUCCESS method=Mobile.get_text_test()[pri:2, instance:com.testcases.Mobile@1d29cf23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getreport -->
        <test-method status="PASS" signature="setupmobilepage()[pri:0, instance:com.testcases.Mobile@1d29cf23]" name="setupmobilepage" is-config="true" duration-ms="24269" started-at="2020-08-17T10:00:40 IST" finished-at="2020-08-17T10:01:04 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupmobilepage -->
        <test-method status="PASS" signature="search_method_test()[pri:3, instance:com.testcases.Mobile@1d29cf23]" name="search_method_test" duration-ms="2413" started-at="2020-08-17T10:01:04 IST" finished-at="2020-08-17T10:01:06 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search_method_test -->
        <test-method status="PASS" signature="getreport(org.testng.ITestResult)[pri:0, instance:com.testcases.Mobile@1d29cf23]" name="getreport" is-config="true" duration-ms="931" started-at="2020-08-17T10:01:06 IST" finished-at="2020-08-17T10:01:07 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=search_method_test status=SUCCESS method=Mobile.search_method_test()[pri:3, instance:com.testcases.Mobile@1d29cf23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getreport -->
        <test-method status="PASS" signature="setupmobilepage()[pri:0, instance:com.testcases.Mobile@1d29cf23]" name="setupmobilepage" is-config="true" duration-ms="21356" started-at="2020-08-17T10:01:07 IST" finished-at="2020-08-17T10:01:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupmobilepage -->
        <test-method status="PASS" signature="go_to_test()[pri:4, instance:com.testcases.Mobile@1d29cf23]" name="go_to_test" duration-ms="3223" started-at="2020-08-17T10:01:29 IST" finished-at="2020-08-17T10:01:32 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- go_to_test -->
        <test-method status="PASS" signature="getreport(org.testng.ITestResult)[pri:0, instance:com.testcases.Mobile@1d29cf23]" name="getreport" is-config="true" duration-ms="1047" started-at="2020-08-17T10:01:32 IST" finished-at="2020-08-17T10:01:33 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=go_to_test status=SUCCESS method=Mobile.go_to_test()[pri:4, instance:com.testcases.Mobile@1d29cf23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getreport -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:com.testcases.Mobile@1d29cf23]" name="teardown" is-config="true" duration-ms="1467" started-at="2020-08-17T10:01:33 IST" finished-at="2020-08-17T10:01:35 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.testcases.Mobile -->
    </test> <!-- Online shopping test automation -->
  </suite> <!-- Flipkart online shopping application -->
</testng-results>
